import mathutils
#import matplotlib.pyplot as plt
from bpypolyskel import bpypolyskel
from collections import Counter

verts = [
    mathutils.Vector((4.757038593292236,4.241274833679199,0.0)),
    mathutils.Vector((4.579460144042969,4.68655252456665,0.0)),
    mathutils.Vector((1.1713312864303589,3.2282652854919434,0.0)),
    mathutils.Vector((1.2806100845336914,2.9054388999938965,0.0)),
    mathutils.Vector((-4.039899826049805,0.6567866206169128,0.0)),
    mathutils.Vector((-4.196988105773926,0.9462174773216248,0.0)),
    mathutils.Vector((-7.229475975036621,-0.34508514404296875,0.0)),
    mathutils.Vector((-7.09970760345459,-0.6567798852920532,0.0)),
    mathutils.Vector((-7.311435222625732,-0.7458351850509644,0.0)),
    mathutils.Vector((-7.154347896575928,-1.135453701019287,0.0)),
    mathutils.Vector((-6.956279754638672,-1.0575302839279175,0.0)),
    mathutils.Vector((-5.385400772094727,-4.764471054077148,0.0)),
    mathutils.Vector((-4.92779541015625,-4.564096450805664,0.0)),
    mathutils.Vector((-4.791196823120117,-4.909187316894531,0.0)),
    mathutils.Vector((-2.066053867340088,-3.7403345108032227,0.0)),
    mathutils.Vector((-2.209482192993164,-3.3952438831329346,0.0)),
    mathutils.Vector((6.321094989776611,0.23377496004104614,0.0)),
    mathutils.Vector((4.647759914398193,4.196746826171875,0.0)),
    mathutils.Vector((4.757038593292236,4.241274833679199,2.911208152770996)),
    mathutils.Vector((4.579460144042969,4.68655252456665,2.911208152770996)),
    mathutils.Vector((1.1713312864303589,3.2282652854919434,2.911208152770996)),
    mathutils.Vector((1.2806100845336914,2.9054388999938965,2.911208152770996)),
    mathutils.Vector((-4.039899826049805,0.6567866206169128,2.911208152770996)),
    mathutils.Vector((-4.196988105773926,0.9462174773216248,2.911208152770996)),
    mathutils.Vector((-7.229475975036621,-0.34508514404296875,2.911208152770996)),
    mathutils.Vector((-7.09970760345459,-0.6567798852920532,2.911208152770996)),
    mathutils.Vector((-7.311435222625732,-0.7458351850509644,2.911208152770996)),
    mathutils.Vector((-7.154347896575928,-1.135453701019287,2.911208152770996)),
    mathutils.Vector((-6.956279754638672,-1.0575302839279175,2.911208152770996)),
    mathutils.Vector((-5.385400772094727,-4.764471054077148,2.911208152770996)),
    mathutils.Vector((-4.92779541015625,-4.564096450805664,2.911208152770996)),
    mathutils.Vector((-4.791196823120117,-4.909187316894531,2.911208152770996)),
    mathutils.Vector((-2.066053867340088,-3.7403345108032227,2.911208152770996)),
    mathutils.Vector((-2.209482192993164,-3.3952438831329346,2.911208152770996)),
    mathutils.Vector((6.321094989776611,0.23377496004104614,2.911208152770996)),
    mathutils.Vector((4.647759914398193,4.196746826171875,2.911208152770996))
]
unitVectors = [
    mathutils.Vector((-0.37043267488479614,0.9288593530654907,0.0)),
    mathutils.Vector((-0.9193733930587769,-0.3933860957622528,0.0)),
    mathutils.Vector((0.32063430547714233,-0.9472030997276306,0.0)),
    mathutils.Vector((-0.921112060546875,-0.38929739594459534,0.0)),
    mathutils.Vector((-0.47701841592788696,0.8788933753967285,0.0)),
    mathutils.Vector((-0.9200581312179565,-0.3917817771434784,0.0)),
    mathutils.Vector((0.38435181975364685,-0.923186719417572,0.0)),
    mathutils.Vector((-0.9217804074287415,-0.38771241903305054,0.0)),
    mathutils.Vector((0.37393373250961304,-0.927455484867096,0.0)),
    mathutils.Vector((0.9305740594863892,0.366103857755661,0.0)),
    mathutils.Vector((0.3901787996292114,-0.9207390546798706,0.0)),
    mathutils.Vector((0.9160306453704834,0.4011082351207733,0.0)),
    mathutils.Vector((0.3680487275123596,-0.9298065304756165,0.0)),
    mathutils.Vector((0.9190309047698975,0.39418551325798035,0.0)),
    mathutils.Vector((-0.38379570841789246,0.9234180450439453,0.0)),
    mathutils.Vector((0.9201940298080444,0.3914625644683838,0.0)),
    mathutils.Vector((-0.38898783922195435,0.9212428331375122,0.0)),
    mathutils.Vector((0.9260714054107666,0.3773482143878937,0.0))
]
holesInfo = None
firstVertIndex = 18
numPolygonVerts = 18
faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)
faces = None


def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


def test_numVertsInFace():
    for face in faces:
        assert len(face) > 2


def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))
